package policia360.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class PresosAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPresosAllPropertiesEquals(Presos expected, Presos actual) {
        assertPresosAutoGeneratedPropertiesEquals(expected, actual);
        assertPresosAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPresosAllUpdatablePropertiesEquals(Presos expected, Presos actual) {
        assertPresosUpdatableFieldsEquals(expected, actual);
        assertPresosUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPresosAutoGeneratedPropertiesEquals(Presos expected, Presos actual) {
        assertThat(expected)
            .as("Verify Presos auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPresosUpdatableFieldsEquals(Presos expected, Presos actual) {
        assertThat(expected)
            .as("Verify Presos relevant properties")
            .satisfies(e -> assertThat(e.getNombre()).as("check nombre").isEqualTo(actual.getNombre()))
            .satisfies(e -> assertThat(e.getApellido()).as("check apellido").isEqualTo(actual.getApellido()))
            .satisfies(e -> assertThat(e.getEdad()).as("check edad").isEqualTo(actual.getEdad()))
            .satisfies(e -> assertThat(e.getDni()).as("check dni").isEqualTo(actual.getDni()))
            .satisfies(e -> assertThat(e.getEnfermedades()).as("check enfermedades").isEqualTo(actual.getEnfermedades()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPresosUpdatableRelationshipsEquals(Presos expected, Presos actual) {
        assertThat(expected)
            .as("Verify Presos relationships")
            .satisfies(e -> assertThat(e.getExpediente()).as("check expediente").isEqualTo(actual.getExpediente()))
            .satisfies(e -> assertThat(e.getCelda()).as("check celda").isEqualTo(actual.getCelda()));
    }
}
